# Generated by Django 5.2.4 on 2025-08-05 15:04

import django.db.models.deletion
import responses.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("forms", "0001_initial"),
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ResponseType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("display_name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "data_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("numeric", "Numeric"),
                            ("boolean", "Boolean"),
                            ("datetime", "Date/Time"),
                            ("json", "JSON/Structured"),
                            ("file", "File/Media"),
                            ("geospatial", "Geographic"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "validation_schema",
                    models.JSONField(
                        default=dict, help_text="JSON schema for validation"
                    ),
                ),
                (
                    "default_constraints",
                    models.JSONField(
                        default=dict, help_text="Default validation rules"
                    ),
                ),
                (
                    "analytics_category",
                    models.CharField(
                        choices=[
                            ("descriptive", "Descriptive Analytics"),
                            ("qualitative", "Qualitative Analytics"),
                            ("inferential", "Inferential Analytics"),
                            ("geospatial", "Geospatial Analytics"),
                            ("temporal", "Temporal Analytics"),
                        ],
                        max_length=50,
                    ),
                ),
                ("input_widget", models.CharField(default="text_input", max_length=50)),
                ("supports_options", models.BooleanField(default=False)),
                ("supports_media", models.BooleanField(default=False)),
                ("supports_geolocation", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["display_name"],
            },
        ),
        migrations.CreateModel(
            name="Respondent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "respondent_id",
                    models.CharField(db_index=True, max_length=255, unique=True),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("demographics", models.JSONField(blank=True, default=dict)),
                ("location_data", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_response_at", models.DateTimeField(blank=True, null=True)),
                ("is_anonymous", models.BooleanField(default=True)),
                ("consent_given", models.BooleanField(default=False)),
                ("sync_status", models.CharField(default="pending", max_length=20)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_respondents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respondents",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Response",
            fields=[
                (
                    "response_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("response_value", models.TextField(blank=True, null=True)),
                (
                    "structured_data",
                    models.JSONField(
                        default=dict, help_text="Type-specific structured data"
                    ),
                ),
                (
                    "choice_selections",
                    models.JSONField(
                        default=list, help_text="Selected choices for multiple choice"
                    ),
                ),
                (
                    "numeric_value",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=20, null=True
                    ),
                ),
                ("datetime_value", models.DateTimeField(blank=True, null=True)),
                (
                    "media_files",
                    models.JSONField(
                        default=list, help_text="List of associated media files"
                    ),
                ),
                (
                    "geo_data",
                    models.JSONField(
                        blank=True,
                        help_text="Geographic coordinates and shapes",
                        null=True,
                    ),
                ),
                (
                    "geo_accuracy",
                    models.FloatField(
                        blank=True, help_text="GPS accuracy in meters", null=True
                    ),
                ),
                ("response_metadata", models.JSONField(default=dict)),
                (
                    "response_format",
                    models.JSONField(
                        default=dict, help_text="Format specifications, units, etc."
                    ),
                ),
                ("collected_at", models.DateTimeField(auto_now_add=True)),
                ("location_data", models.JSONField(blank=True, null=True)),
                ("device_info", models.JSONField(blank=True, null=True)),
                ("is_validated", models.BooleanField(default=False)),
                ("validation_errors", models.JSONField(blank=True, null=True)),
                ("data_quality_score", models.FloatField(blank=True, null=True)),
                ("sync_status", models.CharField(default="pending", max_length=20)),
                ("synced_at", models.DateTimeField(blank=True, null=True)),
                (
                    "collected_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="collected_responses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="projects.project",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="forms.question",
                    ),
                ),
                (
                    "respondent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="responses.respondent",
                    ),
                ),
                (
                    "response_type",
                    models.ForeignKey(
                        default=responses.models.get_default_response_type,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="responses",
                        to="responses.responsetype",
                    ),
                ),
            ],
            options={
                "ordering": ["-collected_at"],
            },
        ),
        migrations.AddIndex(
            model_name="respondent",
            index=models.Index(
                fields=["project"], name="responses_r_project_ed44d5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="respondent",
            index=models.Index(
                fields=["respondent_id"], name="responses_r_respond_b2fb4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="respondent",
            index=models.Index(
                fields=["created_at"], name="responses_r_created_0c031c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["project", "question"], name="responses_r_project_34083e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["respondent"], name="responses_r_respond_d74e00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["response_type"], name="responses_r_respons_1b3297_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["collected_by"], name="responses_r_collect_52c6a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["collected_at"], name="responses_r_collect_91af7e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="response",
            index=models.Index(
                fields=["sync_status"], name="responses_r_sync_st_535633_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="response",
            unique_together={("question", "respondent")},
        ),
    ]
