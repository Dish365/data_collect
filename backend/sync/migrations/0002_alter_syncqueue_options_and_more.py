# Generated by Django 5.2.4 on 2025-07-31 17:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("sync", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="syncqueue",
            options={
                "ordering": ["-priority", "created_at"],
                "verbose_name": "Sync Queue Item",
                "verbose_name_plural": "Sync Queue Items",
            },
        ),
        migrations.RemoveIndex(
            model_name="syncqueue",
            name="sync_queue_status_44b1b4_idx",
        ),
        migrations.RemoveIndex(
            model_name="syncqueue",
            name="sync_queue_priorit_4b8903_idx",
        ),
        migrations.RenameIndex(
            model_name="syncqueue",
            new_name="sync_user_status_idx",
            old_name="sync_queue_created_c049b5_idx",
        ),
        migrations.RenameIndex(
            model_name="syncqueue",
            new_name="sync_table_record_idx",
            old_name="sync_queue_table_n_8b2910_idx",
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="error_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of consecutive errors"
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="max_attempts",
            field=models.PositiveIntegerField(
                default=3, help_text="Maximum number of retry attempts"
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="next_retry",
            field=models.DateTimeField(
                blank=True, help_text="Scheduled time for next retry", null=True
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="object_id",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="sync_source",
            field=models.CharField(
                default="gui",
                help_text="Source system that initiated the sync",
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="sync_target",
            field=models.CharField(
                default="django", help_text="Target system for the sync", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="syncqueue",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="attempts",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of sync attempts"
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="created_at",
            field=models.DateTimeField(
                db_index=True, default=django.utils.timezone.now
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="data",
            field=models.JSONField(
                blank=True, help_text="JSON data for the sync operation", null=True
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="error_message",
            field=models.TextField(
                blank=True,
                help_text="Error message from failed sync attempts",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="last_attempt",
            field=models.DateTimeField(
                blank=True, help_text="Timestamp of last sync attempt", null=True
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="operation",
            field=models.CharField(
                choices=[
                    ("create", "Create"),
                    ("update", "Update"),
                    ("delete", "Delete"),
                    ("sync", "Sync"),
                ],
                db_index=True,
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="priority",
            field=models.IntegerField(
                choices=[(0, "Low"), (5, "Normal"), (10, "High"), (15, "Urgent")],
                db_index=True,
                default=5,
                help_text="Priority level for sync processing",
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="record_id",
            field=models.CharField(
                db_index=True,
                help_text="ID of the record being synchronized",
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="status",
            field=models.CharField(
                choices=[
                    ("pending", "Pending"),
                    ("syncing", "Syncing"),
                    ("completed", "Completed"),
                    ("failed", "Failed"),
                    ("cancelled", "Cancelled"),
                ],
                db_index=True,
                default="pending",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="syncqueue",
            name="table_name",
            field=models.CharField(
                db_index=True,
                help_text="Name of the table/model being synchronized",
                max_length=255,
            ),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(
                fields=["status", "priority", "created_at"],
                name="sync_status_priority_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(
                fields=["table_name", "status"], name="sync_table_status_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(fields=["next_retry"], name="sync_retry_schedule_idx"),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(fields=["last_attempt"], name="sync_last_attempt_idx"),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(fields=["created_at"], name="sync_created_at_idx"),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(
                fields=["status", "attempts", "max_attempts"],
                name="sync_retry_logic_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="syncqueue",
            index=models.Index(
                fields=["sync_source", "sync_target", "status"],
                name="sync_source_target_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="syncqueue",
            constraint=models.CheckConstraint(
                condition=models.Q(("attempts__gte", 0)), name="sync_attempts_positive"
            ),
        ),
        migrations.AddConstraint(
            model_name="syncqueue",
            constraint=models.CheckConstraint(
                condition=models.Q(("max_attempts__gt", 0)),
                name="sync_max_attempts_positive",
            ),
        ),
        migrations.AddConstraint(
            model_name="syncqueue",
            constraint=models.CheckConstraint(
                condition=models.Q(("priority__gte", 0)), name="sync_priority_positive"
            ),
        ),
    ]
