#:import dp kivy.metrics.dp
#:import Window kivy.core.window.Window

<TopBar>:
    size_hint_y: None
    height: dp(64)
    md_bg_color: app.theme_cls.primaryColor
    orientation: 'horizontal'
    padding: dp(16), dp(8)
    spacing: dp(12)
    elevation: 2

    # Navigation section - responsive
    MDBoxLayout:
        id: navigation_section
        orientation: 'horizontal'
        adaptive_width: True
        spacing: dp(8)
        pos_hint: {"center_y": 0.5}

        # Hamburger menu for mobile/small screens
        MDIconButton:
            id: hamburger_menu
            icon: "menu"
            theme_icon_color: "Custom"
            icon_color: 1, 1, 1, 0.9
            size_hint: None, None
            size: dp(40), dp(40)
            on_release: root.show_navigation_menu()
            opacity: 1 if Window.width <= dp(800) else 0
            disabled: Window.width > dp(800)

        # Desktop navigation buttons
        MDBoxLayout:
            id: desktop_navigation
            orientation: 'horizontal'
            adaptive_width: True
            spacing: dp(4)
            opacity: 1 if Window.width > dp(800) else 0

            MDIconButton:
                icon: "view-dashboard"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "dashboard" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "dashboard" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('dashboard')

            MDIconButton:
                icon: "folder-multiple"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "projects" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "projects" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('projects')

            MDIconButton:
                icon: "chart-line"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "analytics" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "analytics" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('analytics')

            MDIconButton:
                icon: "database-search"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "data_exploration" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "data_exploration" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('data_exploration')

            MDIconButton:
                icon: "text-box-search"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "qualitative_analytics" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "qualitative_analytics" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('qualitative_analytics')

            MDIconButton:
                icon: "clipboard-text"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "data_collection" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "data_collection" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('data_collection')

            MDIconButton:
                icon: "format-list-bulleted"
                theme_icon_color: "Custom"
                icon_color: (1, 1, 1, 1) if root.current_screen == "responses" else (1, 1, 1, 0.7)
                size_hint: None, None
                size: dp(40), dp(40)
                theme_bg_color: "Custom"
                md_bg_color: (1, 1, 1, 0.15) if root.current_screen == "responses" else (0, 0, 0, 0)
                on_release: root.navigate_to_screen('responses')

    # Spacer
    Widget:
        size_hint_x: 1

    # Title - responsive
    MDLabel:
        id: top_title
        text: "Dashboard"
        font_style: "Title"
        role: "large"
        theme_text_color: "Custom"
        text_color: 1, 1, 1, 1
        size_hint_x: None
        width: self.texture_size[0]
        pos_hint: {"center_y": 0.5}
        halign: "center"
        opacity: 1 if Window.width > dp(600) else 0

    # Spacer
    Widget:
        size_hint_x: 1

    # Right side controls
    MDBoxLayout:
        orientation: 'horizontal'
        adaptive_width: True
        pos_hint: {"center_y": 0.5}
        spacing: dp(8)

        # Refresh button
        MDIconButton:
            icon: "refresh"
            theme_icon_color: "Custom"
            icon_color: 1, 1, 1, 0.8
            size_hint: None, None
            size: dp(40), dp(40)
            on_release: root.refresh_dashboard()

        # Notification button with badge
        RelativeLayout:
            size_hint: None, None
            size: dp(40), dp(40)
            pos_hint: {"center_y": 0.5}

            MDIconButton:
                id: notification_button
                icon: "bell-outline"
                theme_icon_color: "Custom"
                icon_color: 1, 1, 1, 0.8
                pos_hint: {"center_x": 0.5, "center_y": 0.5}
                size_hint: None, None
                size: dp(40), dp(40)
                on_release: root.show_notifications()

            # Notification badge
            MDLabel:
                id: notification_badge
                text: "0"
                font_style: "Label"
                role: "small"
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1
                size_hint: None, None
                size: dp(16), dp(16)
                pos_hint: {"center_x": 0.75, "center_y": 0.75}
                halign: "center"
                valign: "center"
                opacity: 0
                canvas.before:
                    Color:
                        rgba: app.theme_cls.errorColor
                    Ellipse:
                        pos: self.pos
                        size: self.size

        # User profile section
        MDBoxLayout:
            orientation: "horizontal"
            adaptive_width: True
            pos_hint: {"center_y": 0.5}
            spacing: dp(8)
            padding: dp(8), dp(4)
            opacity: 1 if Window.width > dp(500) else 0
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 0.1
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [dp(20)]

            MDIconButton:
                icon: "account-circle"
                theme_icon_color: "Custom"
                icon_color: 1, 1, 1, 0.9
                size_hint: None, None
                size: dp(28), dp(28)

            MDLabel:
                id: user_name
                text: app.user_display_name
                font_style: "Body"
                role: "medium"
                theme_text_color: "Custom"
                text_color: 1, 1, 1, 1
                adaptive_width: True
                pos_hint: {"center_y": 0.5}
                opacity: 1 if Window.width > dp(600) else 0

        # Logout button
        MDIconButton:
            icon: "logout"
            theme_icon_color: "Custom"
            icon_color: 1, 1, 1, 0.8
            size_hint: None, None
            size: dp(40), dp(40)
            on_release: root.logout()